name: Build web app and push image to aws ecr
on:
    push:
        branches: [ main ]
jobs:
    build-and-push:
        name: Build and push to ecr
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
    
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
    
        - name: Automatic Tagging of Releases
          id: increment-git-tag
          run: |
            bash ./build/git_update.sh -v major
    
        - name: Build, Tag, and Push the Image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: capstone-go-server
            IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  


        - name: Generate Dockerrun.aws.json file
          env:
            URI: ${{ secrets.URI }}
            AUTH: ${{ secrets.AUTH }}
          run: |
            echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "'$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG'",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8080"
              }
            ],
            "Environment": [
              {
                "Name": "URI",
                "Value": "'$URI'"
              },
              {
                "Name": "AUTH",
                "Value": "'$AUTH'"
              }
            ]
            }' > Dockerrun.aws.json
          
    
    
        - name: Deploy to Elastic Beanstalk
          env:
              EB_APP_NAME: capstone-go-v2
              EB_ENV: Capstone-go-v2-env
              VERSION_LABEL: ${{ env.GITHUB_SHA }}
          run: |
            zip deploy.zip Dockerrun.aws.json
            aws s3 cp deploy.zip s3://capstone-go-deployment-bucket/$VERSION_LABEL.zip
            aws elasticbeanstalk create-application-version --application-name $EB_APP_NAME --version-label $VERSION_LABEL --source-bundle S3Bucket="capstone-go-deployment-bucket",S3Key="$VERSION_LABEL.zip"
            aws elasticbeanstalk update-environment --environment-name $EB_ENV --version-label $VERSION_LABEL